bDownloaded

From:

http://labrosa.ee.columbia.edu/millionsong/tasteprofile

I downloaded 
http://labrosa.ee.columbia.edu/millionsong/sites/default/files/challenge/train_triplets.txt.zip
which is a list of taste profiles. 

But then I decided to use the similarity data below.

---

From:

http://labrosa.ee.columbia.edu/millionsong/pages/getting-dataset

I downloaded a similarity database in sqlite format

http://www.ee.columbia.edu/~thierry/artist_similarity.db

    dgleich@recurrent:~/data/echonest/similarity$ sqlite3 artist_similarity.db .schema 
    CREATE TABLE artists (artist_id text PRIMARY KEY);
    CREATE TABLE similarity (target text, similar text, FOREIGN KEY(target) REFERENCES artists(artist_id), FOREIGN KEY(similar) REFERENCES artists(artist_id) );
    CREATE INDEX idx_sim_target ON similarity ('similar','target');
    CREATE INDEX idx_target_sim ON similarity ('target','similar');

This uses artist ids, so I had to get a mapping to real names:

From:

http://labrosa.ee.columbia.edu/millionsong/pages/getting-dataset

I downloaded a list of all the artists

http://labrosa.ee.columbia.edu/millionsong/sites/default/files/AdditionalFiles/unique_artists.txt

> The format is: artist id<SEP>artist mbid<SEP>track id<SEP>artist name
> The code to recreate that file is available here (and a faster version using the SQLite databases here).

---

Found the convert2smat.py code that has most of the right ideas,
we just need to update it.

Okay, that was painless-ish

Now, we need to move to a research directory to process it

---

See ~/Dropbox/research/2014/04-02-echonest-sim
